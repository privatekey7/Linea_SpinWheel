import { WalletDatabase } from './modules/database';

/**
 * –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
 */
async function viewWalletData() {
  try {
    const database = new WalletDatabase();
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const stats = database.getDatabaseStats();
    
    if (stats.totalWallets === 0) {
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–æ—à–µ–ª—å–∫–∏
    const wallets = await database.getAllWallets();
    

    
    // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalBalance = wallets.reduce((sum, wallet) => {
      const balance = parseFloat(wallet.balance?.replace(' ETH', '') || '0');
      return sum + balance;
    }, 0);
    
    const totalWETHBalance = wallets.reduce((sum, wallet) => {
      const wethBalance = parseFloat(wallet.wethBalance?.replace(' WETH', '') || '0');
      return sum + wethBalance;
    }, 0);
    
    const totalSpinsAvailable = wallets.reduce((sum, wallet) => sum + (wallet.spinsAvailable || 0), 0);
    const totalPrizesWon = wallets.reduce((sum, wallet) => sum + (wallet.prizesWon || 0), 0);
    const totalGamesPlayed = wallets.reduce((sum, wallet) => sum + (wallet.gamesPlayed || 0), 0);
    const totalDailyTransfers = wallets.reduce((sum, wallet) => sum + (wallet.todayTransfer ? 1 : 0), 0);
    
    // –í—ã–≤–æ–¥–∏–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    console.log('\nüé∞ LINEA REWARDS - –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–®–ï–õ–¨–ö–û–í');
    console.log('‚ïê'.repeat(80));
    console.log(`üìä –í—Å–µ–≥–æ –∫–æ—à–µ–ª—å–∫–æ–≤: ${wallets.length}`);
    console.log(`üí∞ –û–±—â–∏–π –±–∞–ª–∞–Ω—Å ETH: ${totalBalance.toFixed(4)} ETH`);
    console.log(`üîó –û–±—â–∏–π –±–∞–ª–∞–Ω—Å WETH: ${totalWETHBalance.toFixed(9)} WETH`);
    console.log(`üé∞ –î–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ø–∏–Ω–æ–≤: ${totalSpinsAvailable}`);
    console.log(`üèÜ –í—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤: ${totalPrizesWon}`);
    console.log(`üéÆ –°—ã–≥—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä: ${totalGamesPlayed}`);
    console.log(`üîÑ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${totalDailyTransfers}/${wallets.length}`);
    console.log(`üïê –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(stats.lastUpdate).toLocaleString('ru-RU')}`);
    console.log('‚ïê'.repeat(80));
    
    // –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
    console.log('\nüëõ –î–ï–¢–ê–õ–¨–ù–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ö–û–®–ï–õ–¨–ö–û–í:');
    console.log('‚îÄ'.repeat(120));
    
    wallets.forEach((wallet, index) => {
      console.log(`${index + 1}. –ê–¥—Ä–µ—Å: ${wallet.address}`);
      console.log(`   üí∞ ETH: ${wallet.balance || 'N/A'}`);
      console.log(`   üîó WETH: ${wallet.wethBalance || 'N/A'}`);
      console.log(`   üé∞ –°–ø–∏–Ω—ã: ${wallet.spinsAvailable || 0}`);
      console.log(`   üèÜ –ü—Ä–∏–∑—ã: ${wallet.prizesWon || 0}`);
      console.log(`   üéÆ –ò–≥—Ä—ã: ${wallet.gamesPlayed || 0}`);
      console.log(`   üìÖ –°—Ç—Ä–∏–∫: ${wallet.dayStreak || 0} –¥–Ω–µ–π`);
      if (wallet.todayTransfer) {
        console.log(`   üîÑ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ (${wallet.transferAmount || 'N/A'})`);
      } else {
        console.log(`   üîÑ –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è: ‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞`);
      }
      if (wallet.nextSpinTime) {
        console.log(`   ‚è∞ –°–ª–µ–¥—É—é—â–∏–π —Å–ø–∏–Ω: ${wallet.nextSpinTime}`);
      }
      console.log(`   üîó –ü–æ–¥–∫–ª—é—á–µ–Ω: ${wallet.connectedAt}`);
      if (wallet.lastActivity) {
        console.log(`   üìù –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${wallet.lastActivity}`);
      }
      console.log('‚îÄ'.repeat(120));
    });
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –¥–∞–Ω–Ω—ã—Ö:', error);
  }
}



// –ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  viewWalletData();
}

export { viewWalletData };
